Source: python-pbr
Section: python
Priority: optional
Maintainer: PKG OpenStack <openstack-devel@lists.alioth.debian.org>
Uploaders: Thomas Goirand <zigo@debian.org>,
           Prach Pongpanich <prachpub@gmail.com>,
Build-Depends: debhelper (>= 9),
               dh-python,
               git,
               openstack-pkg-tools,
               python-all,
               python-all-dev,
               python-setuptools,
               python-sphinx,
               python3-all,
               python3-all-dev,
               python3-setuptools,
               python3-sphinx,
Build-Depends-Indep: python-coverage,
                     python-fixtures (>= 1.3.1),
                     python-markupsafe,
                     python-mock (>= 1.3),
                     python-pip,
                     python-six (>= 1.9.0),
                     python-testresources,
                     python-testscenarios,
                     python-testtools (>= 1.4.0),
                     python-virtualenv,
                     python3-fixtures (>= 0.3.14),
                     python3-markupsafe,
                     python3-mock (>= 1.3),
                     python3-pip,
                     python3-six (>= 1.9.0),
                     python3-testresources,
                     python3-testscenarios,
                     python3-testtools (>= 1.4.0),
                     python3-virtualenv,
                     subunit (>= 1.1.0),
                     testrepository,
Standards-Version: 3.9.6
Vcs-Browser: https://anonscm.debian.org/cgit/openstack/python-pbr.git/
Vcs-Git: https://anonscm.debian.org/git/openstack/python-pbr.git
Homepage: https://pypi.python.org/pypi/pbr
XS-Testsuite: autopkgtest

Package: python-pbr
Architecture: all
Depends: python-pkg-resources,
         python-six (>= 1.9.0),
         ${misc:Depends},
         ${python:Depends},
Recommends: ${python:Recommends},
Description: inject useful and sensible default behaviors into setuptools - Python 2.x
 PBR (Python Build Reasonableness) is a library that injects some useful and
 sensible default behaviors into your setuptools run. PBR can:
  * Manage version number based on git revisions and tags (Version file).
  * Generate AUTHORS file from git log
  * Generate ChangeLog from git log
  * Generate Sphinx autodoc stub files for your whole module
  * Store your dependencies in a pip requirements file
  * Use your README file as a long_description
  * Smartly find packages under your root package
 .
 PBR is only mildly configurable. The basic idea is that there's a decent way
 to run things and if you do, you should reap the rewards, because then it's
 simple and repeatable. If you want to do things differently, cool! But you've
 already got the power of Python at your fingertips, so you don't really need
 PBR.
 .
 PBR builds on top of `d2to1` to provide for declarative configuration. It then
 filters the `setup.cfg` data through a setup hook to fill in default values
 and provide more sensible behaviors.
 .
 This package provides support for Python 2.x.

Package: python3-pbr
Architecture: all
Depends: python3-pkg-resources,
         python3-six (>= 1.9.0),
         ${misc:Depends},
         ${python3:Depends},
Recommends: ${python3:Recommends},
Description: inject useful and sensible default behaviors into setuptools - Python 3.x
 PBR (Python Build Reasonableness) is a library that injects some useful and
 sensible default behaviors into your setuptools run. PBR can:
  * Manage version number based on git revisions and tags (Version file).
  * Generate AUTHORS file from git log
  * Generate ChangeLog from git log
  * Generate Sphinx autodoc stub files for your whole module
  * Store your dependencies in a pip requirements file
  * Use your README file as a long_description
  * Smartly find packages under your root package
 .
 PBR is only mildly configurable. The basic idea is that there's a decent way
 to run things and if you do, you should reap the rewards, because then it's
 simple and repeatable. If you want to do things differently, cool! But you've
 already got the power of Python at your fingertips, so you don't really need
 PBR.
 .
 PBR builds on top of `d2to1` to provide for declarative configuration. It then
 filters the `setup.cfg` data through a setup hook to fill in default values
 and provide more sensible behaviors.
 .
 This package provides support for Python 3.x.

Package: python-pbr-doc
Section: doc
Architecture: all
Depends: ${misc:Depends},
         ${sphinxdoc:Depends},
Description: inject useful and sensible default behaviors into setuptools - doc
 PBR (Python Build Reasonableness) is a library that injects some useful and
 sensible default behaviors into your setuptools run. PBR can:
  * Manage version number based on git revisions and tags (Version file).
  * Generate AUTHORS file from git log
  * Generate ChangeLog from git log
  * Generate Sphinx autodoc stub files for your whole module
  * Store your dependencies in a pip requirements file
  * Use your README file as a long_description
  * Smartly find packages under your root package
 .
 PBR is only mildly configurable. The basic idea is that there's a decent way
 to run things and if you do, you should reap the rewards, because then it's
 simple and repeatable. If you want to do things differently, cool! But you've
 already got the power of Python at your fingertips, so you don't really need
 PBR.
 .
 PBR builds on top of `d2to1` to provide for declarative configuration. It then
 filters the `setup.cfg` data through a setup hook to fill in default values
 and provide more sensible behaviors.
 .
 This package provides the documentation.
